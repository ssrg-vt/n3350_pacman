
/home/lalitssrg/coreutils/lib/libcoreutils_a-hash-triple-simple.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <triple_hash>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 fd             	mov    %rdi,%rbp
   8:	53                   	push   %rbx
   9:	48 89 f3             	mov    %rsi,%rbx
   c:	48 83 ec 08          	sub    $0x8,%rsp
  10:	48 8b 3f             	mov    (%rdi),%rdi
  13:	e8 00 00 00 00       	call   18 <triple_hash+0x18>
  18:	31 d2                	xor    %edx,%edx
  1a:	48 33 45 08          	xor    0x8(%rbp),%rax
  1e:	48 83 c4 08          	add    $0x8,%rsp
  22:	48 f7 f3             	div    %rbx
  25:	5b                   	pop    %rbx
  26:	5d                   	pop    %rbp
  27:	48 89 d0             	mov    %rdx,%rax
  2a:	c3                   	ret    
  2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000030 <triple_compare_ino_str>:
  30:	f3 0f 1e fa          	endbr64 
  34:	48 8b 47 10          	mov    0x10(%rdi),%rax
  38:	48 8b 57 08          	mov    0x8(%rdi),%rdx
  3c:	48 33 46 10          	xor    0x10(%rsi),%rax
  40:	48 33 56 08          	xor    0x8(%rsi),%rdx
  44:	48 09 d0             	or     %rdx,%rax
  47:	75 27                	jne    70 <triple_compare_ino_str+0x40>
  49:	48 83 ec 08          	sub    $0x8,%rsp
  4d:	48 8b 36             	mov    (%rsi),%rsi
  50:	48 8b 3f             	mov    (%rdi),%rdi
  53:	e8 00 00 00 00       	call   58 <triple_compare_ino_str+0x28>
  58:	85 c0                	test   %eax,%eax
  5a:	41 0f 94 c0          	sete   %r8b
  5e:	48 83 c4 08          	add    $0x8,%rsp
  62:	44 89 c0             	mov    %r8d,%eax
  65:	c3                   	ret    
  66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  6d:	00 00 00 
  70:	31 c0                	xor    %eax,%eax
  72:	c3                   	ret    
  73:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  7a:	00 00 00 00 
  7e:	66 90                	xchg   %ax,%ax

0000000000000080 <triple_free>:
  80:	f3 0f 1e fa          	endbr64 
  84:	55                   	push   %rbp
  85:	48 89 fd             	mov    %rdi,%rbp
  88:	48 8b 3f             	mov    (%rdi),%rdi
  8b:	e8 00 00 00 00       	call   90 <triple_free+0x10>
  90:	48 89 ef             	mov    %rbp,%rdi
  93:	5d                   	pop    %rbp
  94:	e9 00 00 00 00       	jmp    99 <triple_free+0x19>
