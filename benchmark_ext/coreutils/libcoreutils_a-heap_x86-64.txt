
/home/lalitssrg/coreutils/lib/libcoreutils_a-heap.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <heap_default_compare>:
   0:	f3 0f 1e fa          	endbr64 
   4:	31 c0                	xor    %eax,%eax
   6:	c3                   	ret    
   7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   e:	00 00 

0000000000000010 <heap_alloc>:
  10:	f3 0f 1e fa          	endbr64 
  14:	41 54                	push   %r12
  16:	55                   	push   %rbp
  17:	48 89 fd             	mov    %rdi,%rbp
  1a:	bf 20 00 00 00       	mov    $0x20,%edi
  1f:	53                   	push   %rbx
  20:	48 89 f3             	mov    %rsi,%rbx
  23:	e8 00 00 00 00       	call   28 <heap_alloc+0x18>
  28:	48 85 db             	test   %rbx,%rbx
  2b:	be 08 00 00 00       	mov    $0x8,%esi
  30:	49 89 c4             	mov    %rax,%r12
  33:	b8 01 00 00 00       	mov    $0x1,%eax
  38:	48 0f 44 d8          	cmove  %rax,%rbx
  3c:	48 89 df             	mov    %rbx,%rdi
  3f:	e8 00 00 00 00       	call   44 <heap_alloc+0x34>
  44:	48 85 ed             	test   %rbp,%rbp
  47:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
  4c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  53:	5b                   	pop    %rbx
  54:	49 89 04 24          	mov    %rax,(%r12)
  58:	48 8d 05 a1 ff ff ff 	lea    -0x5f(%rip),%rax        # 0 <heap_default_compare>
  5f:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
  66:	00 00 
  68:	48 0f 44 e8          	cmove  %rax,%rbp
  6c:	4c 89 e0             	mov    %r12,%rax
  6f:	49 89 6c 24 18       	mov    %rbp,0x18(%r12)
  74:	5d                   	pop    %rbp
  75:	41 5c                	pop    %r12
  77:	c3                   	ret    
  78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  7f:	00 

0000000000000080 <heap_free>:
  80:	f3 0f 1e fa          	endbr64 
  84:	55                   	push   %rbp
  85:	48 89 fd             	mov    %rdi,%rbp
  88:	48 8b 3f             	mov    (%rdi),%rdi
  8b:	e8 00 00 00 00       	call   90 <heap_free+0x10>
  90:	48 89 ef             	mov    %rbp,%rdi
  93:	5d                   	pop    %rbp
  94:	e9 00 00 00 00       	jmp    99 <heap_free+0x19>
  99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000000a0 <heap_insert>:
  a0:	f3 0f 1e fa          	endbr64 
  a4:	41 57                	push   %r15
  a6:	41 56                	push   %r14
  a8:	41 55                	push   %r13
  aa:	41 54                	push   %r12
  ac:	49 89 f4             	mov    %rsi,%r12
  af:	55                   	push   %rbp
  b0:	48 89 fd             	mov    %rdi,%rbp
  b3:	53                   	push   %rbx
  b4:	48 83 ec 08          	sub    $0x8,%rsp
  b8:	48 8b 45 08          	mov    0x8(%rbp),%rax
  bc:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
  c0:	48 8b 3f             	mov    (%rdi),%rdi
  c3:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  c7:	48 39 da             	cmp    %rbx,%rdx
  ca:	0f 86 80 00 00 00    	jbe    150 <heap_insert+0xb0>
  d0:	48 83 c3 01          	add    $0x1,%rbx
  d4:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
  d8:	4c 89 24 df          	mov    %r12,(%rdi,%rbx,8)
  dc:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
  e0:	4c 8b 75 18          	mov    0x18(%rbp),%r14
  e4:	4d 8b 2c df          	mov    (%r15,%rbx,8),%r13
  e8:	48 83 fb 01          	cmp    $0x1,%rbx
  ec:	75 0f                	jne    fd <heap_insert+0x5d>
  ee:	eb 50                	jmp    140 <heap_insert+0xa0>
  f0:	49 8b 04 24          	mov    (%r12),%rax
  f4:	48 89 02             	mov    %rax,(%rdx)
  f7:	48 83 fb 01          	cmp    $0x1,%rbx
  fb:	74 43                	je     140 <heap_insert+0xa0>
  fd:	48 89 dd             	mov    %rbx,%rbp
 100:	48 d1 eb             	shr    %rbx
 103:	4c 89 ee             	mov    %r13,%rsi
 106:	4d 8d 24 df          	lea    (%r15,%rbx,8),%r12
 10a:	49 8b 3c 24          	mov    (%r12),%rdi
 10e:	41 ff d6             	call   *%r14
 111:	41 89 c0             	mov    %eax,%r8d
 114:	48 8d 04 ed 00 00 00 	lea    0x0(,%rbp,8),%rax
 11b:	00 
 11c:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
 120:	45 85 c0             	test   %r8d,%r8d
 123:	7e cb                	jle    f0 <heap_insert+0x50>
 125:	4d 89 2c 07          	mov    %r13,(%r15,%rax,1)
 129:	48 83 c4 08          	add    $0x8,%rsp
 12d:	31 c0                	xor    %eax,%eax
 12f:	5b                   	pop    %rbx
 130:	5d                   	pop    %rbp
 131:	41 5c                	pop    %r12
 133:	41 5d                	pop    %r13
 135:	41 5e                	pop    %r14
 137:	41 5f                	pop    %r15
 139:	c3                   	ret    
 13a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 140:	b8 08 00 00 00       	mov    $0x8,%eax
 145:	eb de                	jmp    125 <heap_insert+0x85>
 147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 14e:	00 00 
 150:	48 8d 75 08          	lea    0x8(%rbp),%rsi
 154:	ba 08 00 00 00       	mov    $0x8,%edx
 159:	e8 00 00 00 00       	call   15e <heap_insert+0xbe>
 15e:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
 162:	48 89 45 00          	mov    %rax,0x0(%rbp)
 166:	48 89 c7             	mov    %rax,%rdi
 169:	e9 62 ff ff ff       	jmp    d0 <heap_insert+0x30>
 16e:	66 90                	xchg   %ax,%ax

0000000000000170 <heap_remove_top>:
 170:	f3 0f 1e fa          	endbr64 
 174:	41 57                	push   %r15
 176:	41 56                	push   %r14
 178:	41 55                	push   %r13
 17a:	41 54                	push   %r12
 17c:	55                   	push   %rbp
 17d:	53                   	push   %rbx
 17e:	48 83 ec 38          	sub    $0x38,%rsp
 182:	48 8b 47 10          	mov    0x10(%rdi),%rax
 186:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
 18d:	00 00 
 18f:	48 85 c0             	test   %rax,%rax
 192:	0f 84 ce 00 00 00    	je     266 <heap_remove_top+0xf6>
 198:	48 8b 17             	mov    (%rdi),%rdx
 19b:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
 19f:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
 1a4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
 1a8:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
 1ac:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
 1b0:	48 89 42 08          	mov    %rax,0x8(%rdx)
 1b4:	48 8b 1f             	mov    (%rdi),%rbx
 1b7:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
 1bc:	48 d1 e9             	shr    %rcx
 1bf:	48 8b 6f 18          	mov    0x18(%rdi),%rbp
 1c3:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
 1c8:	4c 8b 6b 08          	mov    0x8(%rbx),%r13
 1cc:	0f 84 a8 00 00 00    	je     27a <heap_remove_top+0x10a>
 1d2:	41 be 01 00 00 00    	mov    $0x1,%r14d
 1d8:	eb 35                	jmp    20f <heap_remove_top+0x9f>
 1da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 1e0:	4c 89 f2             	mov    %r14,%rdx
 1e3:	48 c1 e2 04          	shl    $0x4,%rdx
 1e7:	4c 8d 3c 13          	lea    (%rbx,%rdx,1),%r15
 1eb:	49 8b 3f             	mov    (%r15),%rdi
 1ee:	4c 89 ee             	mov    %r13,%rsi
 1f1:	ff d5                	call   *%rbp
 1f3:	41 89 c1             	mov    %eax,%r9d
 1f6:	4a 8d 04 f3          	lea    (%rbx,%r14,8),%rax
 1fa:	45 85 c9             	test   %r9d,%r9d
 1fd:	7e 64                	jle    263 <heap_remove_top+0xf3>
 1ff:	49 8b 37             	mov    (%r15),%rsi
 202:	48 89 30             	mov    %rsi,(%rax)
 205:	4c 3b 64 24 10       	cmp    0x10(%rsp),%r12
 20a:	77 54                	ja     260 <heap_remove_top+0xf0>
 20c:	4d 89 e6             	mov    %r12,%r14
 20f:	4f 8d 24 36          	lea    (%r14,%r14,1),%r12
 213:	4c 39 64 24 08       	cmp    %r12,0x8(%rsp)
 218:	76 c6                	jbe    1e0 <heap_remove_top+0x70>
 21a:	4c 89 f2             	mov    %r14,%rdx
 21d:	4d 8d 4c 24 01       	lea    0x1(%r12),%r9
 222:	48 c1 e2 04          	shl    $0x4,%rdx
 226:	4e 8d 14 cb          	lea    (%rbx,%r9,8),%r10
 22a:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
 22f:	4c 8d 3c 13          	lea    (%rbx,%rdx,1),%r15
 233:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
 238:	49 8b 32             	mov    (%r10),%rsi
 23b:	49 8b 3f             	mov    (%r15),%rdi
 23e:	ff d5                	call   *%rbp
 240:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
 245:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
 24a:	85 c0                	test   %eax,%eax
 24c:	4d 0f 48 fa          	cmovs  %r10,%r15
 250:	4d 0f 48 e1          	cmovs  %r9,%r12
 254:	eb 95                	jmp    1eb <heap_remove_top+0x7b>
 256:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
 25d:	00 00 00 
 260:	4c 89 f8             	mov    %r15,%rax
 263:	4c 89 28             	mov    %r13,(%rax)
 266:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
 26b:	48 83 c4 38          	add    $0x38,%rsp
 26f:	5b                   	pop    %rbx
 270:	5d                   	pop    %rbp
 271:	41 5c                	pop    %r12
 273:	41 5d                	pop    %r13
 275:	41 5e                	pop    %r14
 277:	41 5f                	pop    %r15
 279:	c3                   	ret    
 27a:	48 8d 43 08          	lea    0x8(%rbx),%rax
 27e:	eb e3                	jmp    263 <heap_remove_top+0xf3>
